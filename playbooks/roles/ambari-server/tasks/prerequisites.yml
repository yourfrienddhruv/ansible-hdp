---
- name: Ensure required packages are installed (yum)
  yum:
    name: "{{ item }}"
    update_cache: yes
    state: installed
  with_items:
    - ambari-server
  notify: Reload systemd
  when: ansible_os_family == "RedHat"

- name: Ensure required packages are installed (apt)
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: installed
  with_items:
    - ambari-server
  when: ansible_os_family == "Debian"

- include: unbound-dns.yml
  when: use_dns

- meta: flush_handlers

- name: Create repo file for Percona
  template: src=sudoers.j2 dest=/etc/sudoers.d/ambari

- name: Run Ambari Server setup
  shell: /bin/echo -ne 'y\ny\nambari\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n' | /usr/sbin/ambari-server setup

- name: Configure Sudoers for Ambari Server
  template: src=sudoers.j2 dest=/etc/sudoers.d/ambari

- name: Make sure ambari-server is running
  command: service ambari-server restart

- name: Waiting for ambari-server to start listening on port 8080
  wait_for: host={{ ansible_nodename }} port=8080

- name: Waiting for ambari-agents to register
  uri: url=http://{{ ansible_nodename }}:8080/api/v1/hosts/{{ hostvars[item]['ansible_nodename'] | lower }}
       method=GET
       force_basic_auth=yes
       user=admin
       password=admin
       HEADER_X-Requested-By="ambari"
       status_code=200,201,202,404
  with_items: "{{ groups['hadoop-cluster'] }}"
  register: result
  until: "result.status != 404"
  retries: 200
  delay: 5

{
  "configurations" : [
    {
      "core-site": {
        "hadoop.proxyuser.hcat.groups" : "*",
        "hadoop.proxyuser.hcat.hosts" : "*",
        "hadoop.proxyuser.hue.groups" : "*",
        "hadoop.proxyuser.hue.hosts" : "*"
      }
    },
    {% if ansible_memtotal_mb > 119000 -%}
    {
      "ams-hbase-env" : {
        "regionserver_xmn_size" : "512m",
        "hbase_regionserver_heapsize" : "2048m",
        "hbase_master_heapsize" : "2048m",
        "hbase_master_xmn_size" : "512m"
      }
    },
    {
      "ams-env" : {
        "metrics_collector_heapsize" : "2048m"
      }
    },
    {
      "hive-env" : {
        "hive.heapsize" : "4096",
        "hive.metastore.heapsize" : "2048",
        "hive.client.heapsize" : "1024"
      }
    },
    {
      "hbase-env" : {
        "hbase_master_heapsize" : "2048m"
        }
    },
    {
      "hadoop-env" : {
        "namenode_heapsize" : "4096m",
        "namenode_opt_maxnewsize" : "512m",
        "namenode_opt_newsize" : "512m"
      }
    },
    {% elif ansible_memtotal_mb > 59000 -%}
    {
      "ams-hbase-env" : {
        "regionserver_xmn_size" : "384m",
        "hbase_regionserver_heapsize" : "1024m",
        "hbase_master_heapsize" : "1024m",
        "hbase_master_xmn_size" : "384m"
      }
    },
    {
      "ams-env" : {
        "metrics_collector_heapsize" : "1024m"
      }
    },
    {
      "hive-env" : {
        "hive.heapsize" : "2048",
        "hive.metastore.heapsize" : "1024",
        "hive.client.heapsize" : "1024"
      }
    },
    {
      "hbase-env" : {
        "hbase_master_heapsize" : "1024m"
        }
    },
    {
      "hadoop-env" : {
        "namenode_heapsize" : "2048m",
        "namenode_opt_maxnewsize" : "384m",
        "namenode_opt_newsize" : "384m"
      }
    },
    {% endif -%}
    {
      "hdfs-site" : {
        "dfs.datanode.data.dir" : "{% for disk in ansible_mounts if disk.mount | match("/grid/*") %}{{ disk.mount }}/hadoop/hdfs/data{% if not loop.last %},{% endif %}{% else %}/hadoop/hdfs/data{%- endfor %}",
        {% if ansible_memtotal_mb > 59000 -%}
        "dfs.datanode.balance.bandwidthPerSec" : "12500000",
        "dfs.datanode.max.transfer.threads": "2048",
        {% endif -%}
        "dfs.datanode.failed.volumes.tolerated" : "0",
        "dfs.replication" : "1"
      }
    },
    {% if ansible_memtotal_mb > 119000 -%}
    {
      "hadoop-env" : {
        "dtnode_heapsize" : "2048m"
      }
    },
    {
      "yarn-site" : {
        {% if install_hbase == true -%}
        "yarn.nodemanager.resource.memory-mb" : "{{ ((ansible_memtotal_mb - 50000 - ansible_memtotal_mb//6)//2048)*2048 }}",
        "yarn.scheduler.maximum-allocation-mb" : "{{ ((ansible_memtotal_mb  - 50000 - 4096 - ansible_memtotal_mb//6)//2048)*2048 }}",
        {% else -%}
        "yarn.nodemanager.resource.memory-mb" : "{{ ((ansible_memtotal_mb - 40000 - ansible_memtotal_mb//6)//2048)*2048 }}",
        "yarn.scheduler.maximum-allocation-mb" : "{{ ((ansible_memtotal_mb - 40000 - 4096 - ansible_memtotal_mb//6)//2048)*2048 }}",
        {% endif -%}
        "yarn.scheduler.minimum-allocation-mb" : "2048"
      }
    },
    {
      "mapred-site" : {
        "mapreduce.map.java.opts" : "-Xmx3276m",
        "mapreduce.map.memory.mb" : "4096",
        "mapreduce.reduce.java.opts" : "-Xmx6553m",
        "mapreduce.reduce.memory.mb" : "8192",
        "mapreduce.task.io.sort.mb" : "2047",
        "yarn.app.mapreduce.am.command-opts" : "-Xmx1638m -Dhdp.version=${hdp.version}",
        "yarn.app.mapreduce.am.resource.mb" : "2048"
      }
    },
    {
      "tez-site" : {
        "tez.am.resource.memory.mb" : "4096",
        "tez.task.resource.memory.mb" : "8192"
      }
    },
    {
      "spark-defaults" : {
        "spark.executor.instances" : 1,
        "spark.executor.memory" : "7808m",
        "spark.driver.memory" : "7808m",
        "spark.yarn.am.memory" : "7808m",
        "spark.yarn.executor.memoryOverhead" : "384",
        "spark.yarn.driver.memoryOverhead" : "384",
        "spark.yarn.am.memoryOverhead" : "384"
        }
    },
    {
      "zeppelin-config" : {
        "properties_attributes" : { },
        "properties" : {
          "zeppelin.notebook.dir" : "notebook",
          "zeppelin.ssl.keystore.type" : "JKS",
          "zeppelin.ssl.truststore.path" : "conf/truststore",
          "zeppelin.websocket.max.text.message.size" : "1024000",
          "zeppelin.notebook.homescreen.hide" : "false",
          "zeppelin.server.port" : "9995",
          "zeppelin.ssl" : "false",
          "zeppelin.notebook.homescreen" : " ",
          "zeppelin.notebook.storage" : "org.apache.zeppelin.notebook.repo.VFSNotebookRepo",
          "zeppelin.interpreter.connect.timeout" : "30000",
          "zeppelin.anonymous.allowed" : "true",
          "zeppelin.interpreter.dir" : "interpreter",
          "zeppelin.ssl.truststore.type" : "JKS",
          "zeppelin.ssl.keystore.path" : "conf/keystore",
          "zeppelin.notebook.s3.bucket" : "zeppelin",
          "zeppelin.server.allowed.origins" : "*",
          "zeppelin.server.addr" : "0.0.0.0",
          "zeppelin.ssl.client.auth" : "false"
        }
      }
    },

    {
      "zeppelin-env" : {
        "properties_attributes" : { },
        "properties" : {
          "zeppelin.spark.jar.dir" : "/apps/zeppelin",
          "zeppelin.executor.mem" : "512m",
          "zeppelin.server.kerberos.keytab" : "",
          "zeppelin_log_dir" : "/var/log/zeppelin",
          "zeppelin.executor.instances" : "2",
          "zeppelin.server.kerberos.principal" : "",
          "zeppelin_user" : "zeppelin",
          "zeppelin_pid_dir" : "/var/run/zeppelin",
          "zeppelin_group" : "zeppelin"
        }
      }
    },
    {
      "hbase-env" : {
        "hbase_regionserver_heapsize" : "8192m",
        "hbase_regionserver_xmn_max" : "1536"
        }
    },
    {% elif ansible_memtotal_mb > 59000 -%}
    {
      "hadoop-env" : {
        "dtnode_heapsize" : "1024m"
      }
    },
    {
      "yarn-site" : {
        {% if install_hbase == true -%}
        "yarn.nodemanager.resource.memory-mb" : "{{ ((ansible_memtotal_mb - 25000 - ansible_memtotal_mb//6)//2048)*2048 }}",
        "yarn.scheduler.maximum-allocation-mb" : "{{ ((ansible_memtotal_mb  - 25000 - 2048 - ansible_memtotal_mb//6)//2048)*2048 }}",
        {% else -%}
        "yarn.nodemanager.resource.memory-mb" : "{{ ((ansible_memtotal_mb - 20000 - ansible_memtotal_mb//6)//2048)*2048 }}",
        "yarn.scheduler.maximum-allocation-mb" : "{{ ((ansible_memtotal_mb - 20000 - 2048 - ansible_memtotal_mb//6)//2048)*2048 }}",
        {% endif -%}
        "yarn.scheduler.minimum-allocation-mb" : "2048"
      }
    },
    {
      "mapred-site" : {
        "mapreduce.map.java.opts" : "-Xmx2457m",
        "mapreduce.map.memory.mb" : "3072",
        "mapreduce.reduce.java.opts" : "-Xmx2457m",
        "mapreduce.reduce.memory.mb" : "3072",
        "mapreduce.task.io.sort.mb" : "1536",
        "yarn.app.mapreduce.am.command-opts" : "-Xmx1638m -Dhdp.version=${hdp.version}",
        "yarn.app.mapreduce.am.resource.mb" : "2048"
      }
    },
    {
      "tez-site" : {
        "tez.am.resource.memory.mb" : "3072",
        "tez.task.resource.memory.mb" : "3072"
      }
    },
    {
      "spark-defaults" : {
        "spark.executor.instances" : 1,
        "spark.executor.memory" : "3712m",
        "spark.driver.memory" : "1664m",
        "spark.yarn.am.memory" : "1664m",
        "spark.yarn.executor.memoryOverhead" : "384",
        "spark.yarn.driver.memoryOverhead" : "384",
        "spark.yarn.am.memoryOverhead" : "384"
        }
    },
    {
      "hbase-env" : {
        "hbase_regionserver_heapsize" : "4096m",
        "hbase_regionserver_xmn_max" : "768"
        }
    },
    {% elif ansible_memtotal_mb > 24000 -%}
    {
      "hadoop-env" : {
        "dtnode_heapsize" : "1024m"
      }
    },
    {
      "yarn-site" : {
        {% if install_hbase == true -%}
        "yarn.nodemanager.resource.memory-mb" : "{{ ((ansible_memtotal_mb - 15000)//1024)*1024 }}",
        "yarn.scheduler.maximum-allocation-mb" : "{{ ((ansible_memtotal_mb - 15000 - 1024)//1024)*1024 }}",
        {% else -%}
        "yarn.nodemanager.resource.memory-mb" : "{{ ((ansible_memtotal_mb - 13000)//1024)*1024 }}",
        "yarn.scheduler.maximum-allocation-mb" : "{{ ((ansible_memtotal_mb - 13000 - 1024)//1024)*1024 }}",
        {% endif -%}
        "yarn.scheduler.minimum-allocation-mb" : "1024"
      }
    },
    {
      "mapred-site" : {
        "mapreduce.map.java.opts" : "-Xmx1638m",
        "mapreduce.map.memory.mb" : "2048",
        "mapreduce.reduce.java.opts" : "-Xmx1638m",
        "mapreduce.reduce.memory.mb" : "2048",
        "mapreduce.task.io.sort.mb" : "768",
        "yarn.app.mapreduce.am.command-opts" : "-Xmx819m -Dhdp.version=${hdp.version}",
        "yarn.app.mapreduce.am.resource.mb" : "1024"
      }
    },
    {
      "tez-site" : {
        "tez.am.resource.memory.mb" : "2048",
        "tez.task.resource.memory.mb" : "2048"
      }
    },
    {
      "spark-defaults" : {
        "spark.executor.instances" : 1,
        "spark.executor.memory" : "1664m",
        "spark.driver.memory" : "1664m",
        "spark.yarn.am.memory" : "1664m",
        "spark.yarn.executor.memoryOverhead" : "384",
        "spark.yarn.driver.memoryOverhead" : "384",
        "spark.yarn.am.memoryOverhead" : "384"
        }
    },
    {
      "hbase-env" : {
        "hbase_regionserver_heapsize" : "2048m",
        "hbase_regionserver_xmn_max" : "512"
        }
    },
    {% endif -%}
    {
      "yarn-site" : {
        "yarn.nodemanager.local-dirs" : "{% for disk in ansible_mounts if disk.mount | match("/grid/*") %}{{ disk.mount }}/hadoop/yarn/local{% if not loop.last %},{% endif %}{% else %}/hadoop/yarn/local{%- endfor %}",
        "yarn.nodemanager.log-dirs" : "{% for disk in ansible_mounts if disk.mount | match("/grid/*") %}{{ disk.mount }}/hadoop/yarn/log{% if not loop.last %},{% endif %}{% else %}/hadoop/yarn/log{%- endfor %}"      }
    },
    {
      "kafka-broker" : {
        "log.dirs" : "/hadoop/kafka-logs"
      }
    },
    {
      "storm-site" : {
        "logviewer.port" : "8005"
      }
    },
    {
      "oozie-site" : {
        "oozie.service.ProxyUserService.proxyuser.hue.groups" : "*",
        "oozie.service.ProxyUserService.proxyuser.hue.hosts" : "*"
      }
    },
    {
      "webhcat-site" : {
        "webhcat.proxyuser.hue.groups" : "*",
        "webhcat.proxyuser.hue.hosts" : "*"
      }
    },
    {
      "hive-site" : {
        {% if ansible_memtotal_mb > 119000 -%}
        "hive.tez.container.size" : "8192",
        {% elif ansible_memtotal_mb > 59000 -%}
        "hive.tez.container.size" : "3072",
        {% elif ansible_memtotal_mb > 24000 -%}
        "hive.tez.container.size" : "2048",
        {% endif -%}
        "fs.file.impl.disable.cache" : "true",
        "fs.hdfs.impl.disable.cache" : "true",
        "javax.jdo.option.ConnectionPassword" : "{{ services_password }}"
      }
    }
  ],
  "host_groups" : [
    {
      "name" : "single_node",
      "configurations" : [ ],
      "components" : [
        {
          "name" : "ZOOKEEPER_CLIENT"
        },
        {
          "name" : "HDFS_CLIENT"
        },
        {
          "name" : "YARN_CLIENT"
        },
        {
          "name" : "MAPREDUCE2_CLIENT"
        },
        {
          "name" : "ZOOKEEPER_SERVER"
        },
        {
          "name" : "HISTORYSERVER"
        },
        {
          "name" : "SECONDARY_NAMENODE"
        },
        {
          "name" : "AMBARI_SERVER"
        },
        {
          "name" : "APP_TIMELINE_SERVER"
        },
        {% if  ambari_version >= "2.2.2" -%}
        {
          "name" : "METRICS_COLLECTOR"
        },
        {
          "name" : "METRICS_GRAFANA"
        },
        {% endif -%}
        {% if  ambari_version >= "2.4.0" -%}
        {
          "name" : "INFRA_SOLR_CLIENT"
        },
        {
          "name" : "INFRA_SOLR"
        },
        {
          "name" : "LOGSEARCH_SERVER"
        },
        {% endif -%}
        {
          "name" : "RESOURCEMANAGER"
        },
        {
          "name" : "NAMENODE"
        },
        {
          "name" : "NODEMANAGER"
        },
        {% if install_flume == true -%}
        {
          "name" : "FLUME_HANDLER"
        },
        {% endif -%}
        {% if install_spark == true -%}
        {
          "name" : "SPARK_JOBHISTORYSERVER"
        },
        {
          "name" : "SPARK_THRIFTSERVER"
        },
        {
          "name" : "SPARK_CLIENT"
        },
        {% endif -%}
        {% if install_hbase == true -%}
        {
          "name" : "HBASE_REGIONSERVER"
        },
        {
          "name" : "HBASE_CLIENT"
        },
        {
          "name" : "HBASE_MASTER"
        },
        {% endif -%}
        {% if install_storm == true -%}
        {
          "name" : "SUPERVISOR"
        },
        {
          "name" : "STORM_UI_SERVER"
        },
        {
          "name" : "DRPC_SERVER"
        },
        {
          "name" : "NIMBUS"
        },
        {% endif -%}
        {% if install_kafka == true -%}
        {
          "name" : "KAFKA_BROKER"
        },
        {% endif -%}
        {% if install_zeppelin == true -%}
        {
          "name" : "ZEPPELIN_MASTER"
        },
        {% endif -%}
        {% if  ambari_version >= "2.2.2" -%}
        {
          "name" : "METRICS_MONITOR"
        },
        {% endif -%}
        {% if  ambari_version >= "2.4.0" -%}
        {
          "name" : "LOGSEARCH_LOGFEEDER"
        },
        {% endif -%}
        {
          "name" : "DATANODE"
        }
      ],
      "cardinality" : "1"
    }
  ],
  "Blueprints" : {
    "stack_name" : "HDP",
    "stack_version" : "{{ hdp_version }}"
  }
}
